sistema de bases de datos distribuidos
que tipo de arquitectura recomendada azur
nombre apellido
proponer un tema de acuerdo a la distribución de datos

gestion de un inventario
evaluación de cualquier sistema informatico sobre la vulnerabilida de la bd
tiendas en linea 
bd gestion de citas medicas
bd comercio electrónico 
bd de pinturas personas que se encargan de pintar 
sistema hospitalario
sistema control de aerolíneas de control sobre las seguridad
sistema de compra y venta de productos medicos
sistema para gestion de iventarios para artesanías
sistema para mecánica 
sistema para químicos de lavados de dientes
sistema intermediario de productos mediante inversión 
sistema para comprar a distrintas empresas
sistema para maquinarias 
sistema electrónicos 
sistema de transporte inter provinciales 
sistema  
---------------------------------------------------------
****************************
replicación de base de datos
esquemas e replicación de bs de datos replicación activa/pasiva instantánea/transaccional/merhe
replicación síncrona
ransaccional/merge replicación
****************************************** 
escenarios de replicación de bd
************************************************************************
una bd distribuida debe de manejar de forma transparente los datos, 
una bd distribuida la metas que tiene es: latencia, tolerancia a fallos, estabilidad, autonomía 
3 cosas importantes para tener una bd distribuida
- varios sistemas de gestiones de bd
- varios sistemas operativos
- varias maquinas redes de comunicación 
existen 2 redes LAN y WANT
se puede ver como si fuera una centralizada 

una bdd es un tipo de bd virtual cuyas partes se almacenan en varias bd 

su propio dbms local y software de administración de transacción 

un sistema de gestion de base de datos tiene, conectividad y almacenamiento 
en conclusion 
es un conjunto de multiples bd lógicamente relacionada 
se conecta mediante una red y con eso los datos se reflejan automáticamente.
 
******************************************************************************************************************
SEMANA 2 CLASE 3-4 01/09/2025
BASE DE DATOS DISTRIBUIDA 
transparencia-> puedo ver lo que se hace a la vez en los nodos

rige el almacenamiento y procesamiento de datos lógicamente relacionados a traves de sistemas de computadoras interconectadas, la cual se distribuye entra varios sitios 
--------------------------------------------------------------------------------------------
Estaciones de trabajo -> clientes ejm: reloj, móvil, compu

componentes de software y hardware ->

medios de comunicación -> la red

Procesador de transacciones -> sistema de gestor de base de datos

El procesador de datos -> va a estar alojado en el servidor 
----------------------------------------------------------------------------------------------
podemos simular mediante maquinas virtuales
-------------------------------------------------------------------------------------------
Características de un SMBD BDD
1.- Recibe solicitud de una aplicación 
2.- Valida, analiza y descompone la solicitud. 
3.- Descompone la solicitud en varias operaciones de disco.
4.- Busca localiza lee y valida todos los datos 
5.- Garantiza la consistencia, la seguridad y la integridad.
6.- Validad los datos de conformidad con las condiciones, especificadas por la solicitud.
7.- Presenta los datos seleccionados en los datos requeridos
8.- Todas están actividades son transparente para el usuario
----------------------------------------------------------------------------------------------
CLASIFICACION DE LAS BDD
- Los sistemas de administración de base de datos generalizado.
- Las BD se clasifican en como la distribución de los procesos y datos son soportados: DB centralizada y DB distribuida,
----------------------------------

-----------------------------------------------
BASE DE DATOS DISTRIBUIDAS
Procesamiento en sitios multiples y datos en sitios multiples. -> SMBDD Homogéneas
------------------------------------------------------------------------------------------
VENTAJAS DE LOS SISTEMAS DE ADMINISTRACION DE BDD (DDBMS).
1.- Los datos se localizan cerca del sitio de "mayor demanda"
2.- Acceso más rápido a los datos
3.- Procesamiento mas rápido de los datos
4.- Facilita el crecimiento 
5.- Comunicaciones mejoradas
6.- Costos de operación reducidos
7.- Interface de usuarios fácil de usar.
8.- Menos peligro de falla en un solo punto
9.- Independencia del procesador 
------------------------------------------------------------------------------------------
PROBLEMAS QUE SE PRESENTAN EN LAS BASE DED DATOS DISTRIBUIDA
1.- El rendimiento puede afectarse por la carga del trabajo
2.- La confiabilidad de los sistemas distribuidos, por la complejidad de los componentes
3.- Por mayor complejidad, alto gatos de construcción y mantenimiento.
4.-
----------------------------------------------------------------------------------------------------- 
NIVELES DED TRANSPARIENCIA DE UNA BASE DE DATOS DISTRIBUIDAS
La transparencia se puede entender como la separación de la semántica del alto nivel de un sistema de los aspectos de bajo novel relacionados a la implementación del mismo.

❖La transparencia de fragmentación.
❖La transparencia de ubicación.
❖La transparencia de ubicación local.
------------------------
existen 6 niveles de transacción
Transparencia de distribución.
Transparencia de transacción.
Transparencia de replicación.
Transparencia de falla.
Transparencia de desempeño.
Transparencia de heterogeneidad.

CREATE TABLA UNIVERSIDAD( ID_UNI, NOM_UNI);

INSERT INTO UNIVERSIDAD VALUES ('UTA', 'UNIVERSIDAD TÉCNICA DE AMBATO');

CREATE TABLA CAMPOS( ID_CAM, UBI_CAMP, ID_UNI_PER);

INSERT INTO CAMPOS VALUES ('C01', 'HUACHI', 'UTA');
INSERT INTO CAMPOS VALUES ('C02', 'QUEROCHACA', 'UTA');

CREATE TABLA FACULTADES(ID_FAC, NOM_FAC, ID_CAM_PER);

INSERT INTO FACULTADES VALUES ('FISEI', 'FACULTAD DE INGENIERIA EN SISTEMAS', 'C01');


CREATE TABLE CARRERAS(ID_CAR, NOM_CAR, ID_FAC_PER, CUP_DIS_CARR);

INSERT INTO CARRERAS VALUES ('CAR01', 'SISTEMAS DE BASES DE DATOS DISTRIBUIDOS', 'FISEI', 12);

-----------------------------------------------------------------------------------------------------

CREATE TABLE CAMPUS
(ID_CAM VARCHAR(5) PRIMARY KEY, 
 NOM_CAM VARCHAR(20) NOT NULL,
 UBI_CAP VARCHAR(30) NOT NULL);

INSERT INTO CAMPUS VALUES('CAMP1','CAMPUS INGAHURCO','INGAHURCO');
INSERT INTO CAMPUS VALUES('CAMP2','CAMPUS QUEROCHACA','QUEROCHACA');
INSERT INTO CAMPUS VALUES('CAMP3','CAMPUS HUACHI','HUACHI');


CREATE TABLE CARRERAS
(ID_CAR VARCHAR(5) PRIMARY KEY,
 NOM_CAR VARCHAR(50) NOT NULL,
 CAM_PER_CAR REFERENCES CAMPUS(ID_CAM),
 CUPOS_DISPONIBLES NUMBER NOT NULL);

INSERT INTO CARRERAS VALUES('CAR1','TECNOLOGIAS DE LA INFORMACION','CAMP3',20);
INSERT INTO CARRERAS VALUES('CAR2','TELECOMUNICACIONES','CAMP3',50);
INSERT INTO CARRERAS VALUES('CAR3','INGENIERIA INDUSTRIAL','CAMP3',10);

INSERT INTO CARRERAS VALUES('CAR4','MEDICINA','CAMP1',60);
INSERT INTO CARRERAS VALUES('CAR5','ENFERMERIA','CAMP1',5);
INSERT INTO CARRERAS VALUES('CAR6','AUXILIAR EN ENFERMERIA','CAMP1',60);

INSERT INTO CARRERAS VALUES('CAR7','AGRONOMIA','CAMP2',70);
INSERT INTO CARRERAS VALUES('CAR8','VETERINARIA','CAMP2',90);
INSERT INTO CARRERAS VALUES('CAR9','BIOTECNOLOGIA','CAMP2',40);

SELECT C.NOM_CAR, A.NOM_CAM
FROM CARRERAS C,CAMPUS A 
WHERE C.CAM_PER_CAR = 'CAMP1'
AND C.CAM_PER_CAR = A.ID_CAM
AND C.CUPOS_DISPONIBLES>60;

SELECT C.NOM_CAR, A.NOM_CAM, C.CUPOS_DISPONIBLES
FROM CARRERAS C,CAMPUS A 
WHERE C.CAM_PER_CAR = A.ID_CAM
AND C.CUPOS_DISPONIBLES>70;


SELECT NOM_CAR 
FROM CARRERAS 
WHERE CAM_PER_CAR = 'CAMP3';


SELECT *
FROM CARRERAS
WHERE CAM_PER = 'CAMP3',
CUP_DIS_CARR > 5;




SELECT *
FROM CARRERAS
WHERE cam_per_car = 'CAMP3'
AND cupos_disponibles > 61
UNION
SELECT *
FROM CARRERAS
WHERE cam_per_car = 'CAMP1'
AND cupos_disponibles > 20
UNION
SELECT *
FROM CARRERAS
WHERE cam_per_car = 'CAMP2'
AND cupos_disponibles > 70;









************************************************************************************************
PROYECTO
SISTEMA PARA UN HOSPITAL O UNA CLINICA Y VA A TENER 4 SURCURSALES, QUITO, 
************************************************************************************************

****
clase 4 05/09/2025
transparencia de transacción 
permite actualizar datos en varios sitios de la red, si esta bien lo hace si no se acaba.

formato de transacción:
begin work -> Inicio de la transacción 
*
select 
update  -> Solicitudes  
delete 
*
commit -> fin de la transacción 

Trasaccion distribuida. actualiza y solicita datos de varios sitios remotos en una red.

----
solicitud remota -> accede a datos que sera procesados por un sólo procesador de base de datos remoto.
La sentencia o solicitud SQL puede hacer referencia a datos en un solo sitio remoto
-----
cuando ambas tablas están el el sitioB
la transacción puede hacer referencia solamente a un procesador de datos remoto.
---
Cada sentencia o solicitud SQL puede hacer referencia solamente a un procesador de datos, y este va ser el gestor de datos.
se puede utilizar remotamente 1 y localmente 2 gestores de datos
permite que una transacción haga referencia a varios sitios de procesamiento de datos diferentes(locales y remotos ).
-----------------------------
una solicitud distribuida permite hacer referencia a datos de varios sitios de procesamientos de datos remotos.
-Divide una tabla en varios fragmentos.
-hace referencia a uno o mas fragmentos solamente con una solicitud.
**********************************************************************************************************************
Transparencia de replicación.
se refiere que si existen copias de objetos de la base de datos, su existencia debe ser controlado por el sistema no por el usuario.
***********************************************************************************************************************
- transparencia de falla -> 
Permite que el sistema siga operando en el caso de una falla de nodo.
****************************************************************************************************************
TRANSPARENCIA DE DESEMPEÑO
si hay varias solicitudes, se hace una sola solicitud que englobe todo para dicha pregunta.
relaciones globales a consultas definidas sobre framentacion
es la optimización de consultas, reduce al mínimo el costo total asociado con la ejecución de una solicitud.
---
OPTIMIZACION DE CONSULTAS
Los costos asociados con una solicitud son una función 
- El costo del tiempo de entrada y salida implica al acceder los datos físicos guardados en disco. -> mas recursos
- costo de comunicación asociados con la trasmisión de datos  entre nodos en sistema de base de datos distribuidos. -> mas recursos
- costo de tiempo de CPU asociados con la sobrecarga de procesamiento.
-----
Optimización de consultas
Se basa en 2 principios
- la selección del orden de ejecución optimo.
- La selección del sitio a ser accedidos para reducir al mínimo el costo de de comunicación.

se clasifican como manuales o automáticos.
automáticos -> la ruta mas barata
manual -> lo que nosotros queramos seleccionar

una consulta estática, la mejor estrategia es escogida por el DBMS -> GESTOR

la dinámica, ocurre en el tiempo de ejecución.

exiten texnicas para optimizar
- basado en estadísticas -> proporcionan información como números de registros, tiempo de acceso promedio, numero de solicitudes atendidos, etc 
- basado en reglas -> conjunto definidas por el usuario para escoger la mejor estrategia 
******************************************************************************
TRANSPARENCIA DE HETEROGENEIDAD
Permite la integración de varios sistemas de administración de base de datos locales

***************************************************
INSTALAR 
- Una maquina virtual 
- 2 sistemas operativos UBUNTU 20 GRAFICO.
**************************************************
 
preguntas de la semana 2

En UTA_Distribuida, una consulta a global.extensiones devuelve filas de Huachi, Ingahurco y Querochaca sin que el usuario conozca dónde vive cada fragmento. ¿Qué tipo de transparencia es la principal en juego?

global.oferta_carrera une (UNION ALL) las tablas site_* .oferta_carrera y el usuario no escribe manualmente múltiples SELECT por sede. ¿Qué nivel de transparencia se ilustra?

Para simplificar consultas, se crean sinónimos carreras, extensiones, oferta que apuntan a las vistas globales; así el usuario no necesita prefijos de esquema. ¿Qué transparencia describe mejor este caso?

Una transacción inserta oferta en Querochaca y actualiza cupos en Huachi como una unidad atómica; si falla un sitio se revierte todo. ¿Qué transparencia se busca demostrar?

---------------------------------------------------------------------------------------------------------------------------------------
SEMANA 3 CLASE 5
El sistema ANSI-SPARC divide a un sistema en tres niveles: interno, conceptual y externo
esquema -> es una estructura 

esquema interno va a ver un esquema físico -> los script son los esquemas físicos
-------------------------------------------------------------------------------------------
en el nivel interno: describe la estructura física de la bd mediando un esquema interno.
nivel conceptual: describe entidades, atributos, relaciones , operaciones del usuario
nivel externo: describe varios esquemas externos o vistas de usuario
-------------------------------------------------------------------------------------
Los unicos datos estan en datos fisicos -> los scripts 

basado en datos -> se indentifica los diferentes tipos de descripcion de datos.

----
ARQUITECTURA ANSI/SPARC de un sistema distribuida 
base de datos distribuidos HOMOGÉNEOS 
Tiene múltiples colecciones de datos.
Integra múltiples recursos de datos
Se parecen a un sistema centralizado. Datos en varios sitios
comunicados por la red.
No existen usuarios locales y todos ellos acceden la base de datos a
través de una interfaz global.
El esquema global es la unión de toda las descripciones de datos locales
-------------------------------------------------------------------------------
ARQUITECTURA ANSI/SPARC de un sistema distribuida 
base de datos distribuidos HETEROGÉNEOS.
Una subclase son los sistemas de administración de multi-bases de datos 
-------------------------------------------------------------------------------------
Diseño conceptual de la base de datos.
diseño logico de la base de datos
--
diseño fisico de la base de datos 
se tiene en cuenta 3 problemas siguientes
Cómo dividir la base de datos en fragmentos.
Qué fragmentos replicar.
Dónde localizar estos fragmentos y réplicas.
-----
¿Cuáles son los objetivos del diseño de la distribución de los datos?
----------------------------
Procesamiento local
colocar los datos tan cerca como sea posible de las apliaciones que los utilizan.
--------------------------------
Distribución de trabajo

--------------------------------------
costo de almacenamiento
el costo de almacenamiento de datos no es tan relevante si este se compara con el de cpu
-----------------------------------------------------------------------------------
****
problemas de fragmentación 
Se refiere al particionamiento de la información para distribuir cada parte en los diferentes sitios de la red.

Se debe de responder las siguientes preguntas:
¿Por qué hacer una fragmentación de datos?
¿Cómo realizar la fragmentación?
¿Qué tanto se debe fragmentar?
¿Cómo probar la validez de una fragmentación?
¿Cómo realizar el asignamiento de fragmentos?
¿Cómo considerar los requerimientos de la información?
-----------------------------------------------------------------------------------
Base de datos de usuario
Base de datos de sistema
Una tabla.
--
Cada fragmento puede guardarse en cualquier sitio en una red de
computadoras. 
------------------------------------------------------------------------------------
catalogo -> donde están todas las reglas
se guardan en catalogo de datos distribuidos, desde donde es accedida por el procesador de transacciones para procesar las solicitudes de los usuarios.

******
-------------------------------------
Fragmentación Horizontal
Se refiere a la división de una relación en subconjunto(fragmentos) de tuplas (filas).
cada fragmento se guarda en un nodo diferente, y cada uno de ellos tiene filas únicas.
-------------------------------------------------------------------------------------------------------------
Fragmentación Vertical
Se refiere a la división de una relación en subconjuntos de atributos (columna).
-------------------------------------------------------------------------------------------------------
Fragmentación Mezclada
Se refiere a una combinación de estrategias horizontales y verticales.
**********
-------------------------------------------------------------------------------------------------------
Clase 6 semana 3 12/09/2025
Preguntas del dia 
(Opción múltiple) ¿Qué describe el nivel interno? A) Vistas de usuario y reportes B) Estructura física mediante un esquema interno C) Entidades, atributos y restricciones lógicas D) Reglas de negocio en la aplicación
El nivel conceptual se centra en entidades, atributos, relaciones, operaciones de usuario y restricciones.
¿Qué nombre reciben las “vistas de usuario” y en qué nivel se ubican?
¿Cuál de estos enunciados corresponde al nivel externo? A) Define índices y estructuras de almacenamiento en disco B) Proporciona múltiples esquemas orientados a distintos usuarios C) Define claves foráneas a nivel físico D) Determina direcciones de bloques en el disco
I. Interno — b) Estructura física II. Conceptual — c) Modelo lógico global III. Externo — a) Vistas de usuario
¿En qué nivel se documentan “entidades, atributos, relaciones y restricciones” del modelo global? A) Externo B) Conceptual C) Interno D) Físico-operativo
Menciona dos ejemplos de decisiones típicas del nivel interno.
¿Qué afirmación es correcta respecto a la separación entre niveles? A) Los usuarios finales acceden directamente al nivel interno B) El nivel conceptual actúa como puente entre externo e interno C) El nivel externo controla los buffers de disco D) El nivel interno define las vistas de seguridad lógicas
(Caso breve) Una analista necesita una vista con solo Cliente(nombre, ciudad) para un grupo comercial, sin modificar la base física. a) ¿Qué nivel crea esa vista? b) ¿Qué nivel permanece estable aunque cambien índices y archivos?
-----------------------------------------

ejercicio 1 

SELECT id, title
FROM course
WHERE id IN ( SELECT course_id
    	      FROM course_edition
              WHERE academic_semester_id IN (SELECT id
        		 	             FROM academic_semester
        				     WHERE term ILIKE '%Primavera%'));

EJERCICIO2

SELECT ID

3.- Profesor(es) con menos cursos:


SELECT id, first_name, last_name
FROM student
WHERE id IN (SELECT student_id
    	     FROM course_enrollment
             GROUP BY student_id
             HAVING COUNT(*) >= ALL (SELECT COUNT(*)
        			     FROM course_enrollment
       				     GROUP BY student_id));
-------------------------------------------------------------------------------------------------------------------------------------------------
Semana 4 




SELECT *
FROM empleados
WHERE salario > (SELECT AVG(salario) FROM empleados);


















